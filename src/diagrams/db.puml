@startuml

object Users {
  **User_ID** : serial PK
  **Username**: varchar(30) PK2
  **Password_Hash**: char(60)
  Session_Token: char(128)
}

object ReadArticles {
  **User_ID**: FK(Users(User_ID)) PK
  **Article_ID**: FK(Articles(Article_ID)) PK
  **Read_Date**: date
}

object Articles {
  **Article_ID**: smallserial PK
  **Title**: varchar(400)
  **Publish_Date**: date PK2
  **Placement**: smallint PK2
  **Content**: varchar(4000)
  **Content_Path**: varchar(200) PK3
}

object ArticleKeywordLookups {
  **Article_Id**: FK(Articles(Article_ID)) PK
  **Keyword**: varchar(20) PK
  **Keyword_Count**: smallint
}

object ArticleKeywordsOfLength {
  **Article_ID**: FK(Articles(Article_ID)) PK
  **Keyword_Length**: Theoretical FK(\n  LENGTH(ArticleKeywordLookups.Keyword)\n  WHERE ArticleKeywordLookups.Article_ID = this.Article_ID\n) PK
  **Keywords_Count**: Computed(\n  SUM(ArticleKeywordLookups.Keyword_Count)\n  WHERE ArticleKeywordLookups.Article_ID = this.Article_ID\n  AND LENGTH(ArticleKeywordLookups.Keyword) = this.Keyword_Length\n) 
}

Users -r- ReadArticles: Read Articles
ReadArticles-r->Articles

Articles->ArticleKeywordLookups: Has Keyword Lookups
Articles-d-->ArticleKeywordsOfLength: Has Number of Keywords of Length
ArticleKeywordsOfLength-u-->ArticleKeywordLookups: Has Sum Equal to\nnumber of Keywords with Keyword_Length\nthat correspond to Article_Id
@enduml